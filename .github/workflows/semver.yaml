name: Auto Tag Application with SemVer
on:
  push:
    branches:
      - main

jobs:
  Version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Conventional Commits Version Bump
        id: semver
        uses: paulhatch/semantic-version@v5.4.0 
        with:
          branch: main
          bump_each_commit: false
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"
          search_commit_body: true
          enable_prerelease_mode: true
          debug: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Repository Status
        run: |
          echo "Repository Tags:"
          git tag
          echo "Latest Commit:"
          git log -1

      - name: Get Commit Messages
        id: get_commits
        run: |
          TAG_COUNT=$(git tag | wc -l)
          if [ "$TAG_COUNT" -eq "0" ]; then
            COMMIT_MESSAGES=$(git log --pretty=format:"%h - %s")
          else
            LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            COMMIT_MESSAGES=$(git log ${LATEST_TAG}..HEAD --pretty=format:"%h - %s")
          fi
          echo "commit_messages<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MESSAGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Prepend v to version
        run: |
          echo "FULL_VERSION=v${{ steps.semver.outputs.version }}" >> $GITHUB_ENV
          echo $FULL_VERSION

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.FULL_VERSION }}
          release_name: Release ${{ env.FULL_VERSION }}
          draft: false
          prerelease: false
          body: ${{ env.commit_messages }}

